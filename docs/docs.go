// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/subscriptions": {
            "get": {
                "description": "Отдает массив из всех подписок в базе; пустой json если подписок нет",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получение списка всех подписок из базы",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.RawSubscription"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Создаёт новую подписку из данных в теле запроса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Cоздание новой подписки",
                "parameters": [
                    {
                        "description": "Subscription info",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RawSubscription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription successfully created",
                        "schema": {
                            "$ref": "#/definitions/model.RawSubscription"
                        }
                    },
                    "400": {
                        "description": "Incomplete/incorrect data input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Subscription already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscriptions/report": {
            "get": {
                "description": "Выдает сумму стоимости подписок по указанному периоду(конкретному месяцу в формате \"07-2024\"), пользователю и провайдеру; пользователь и провайдер не являются обязательными полями.",
                "tags": [
                    "subscriptions"
                ],
                "summary": "Подсчет суммы подписок удовлетворяющим условиям",
                "parameters": [
                    {
                        "type": "string",
                        "example": "07-2025",
                        "description": "Период(конкретный месяц в формате 07-2024) для поиска подписок в активном статусе",
                        "name": "period",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "adjhdjfnv-njdfv889",
                        "description": "UID пользователя",
                        "name": "uid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Yandex",
                        "description": "Имя провайдера услуги",
                        "name": "provider",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK",
                        "schema": {
                            "$ref": "#/definitions/model.Report"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscriptions/{sid}": {
            "get": {
                "description": "Возвращает подписку в формате JSON по ее SID из URL",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получение подписки по SID",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 20,
                        "description": "SID подписки",
                        "name": "sid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RawSubscription"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет подписку по ее SID из URL, новые данные берутся из тела запроса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Обновление подписки по ее SID",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 20,
                        "description": "SID подписки",
                        "name": "sid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subscription info",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RawSubscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription updated successfully",
                        "schema": {
                            "$ref": "#/definitions/model.RawSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет подписки по ее SID из URL",
                "tags": [
                    "subscriptions"
                ],
                "summary": "Удаление подписки по SID",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 20,
                        "description": "SID подписки",
                        "name": "sid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.RawSubscription": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "price": {
                    "type": "integer",
                    "example": 400
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex Plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "07-2025"
                },
                "subscription_id": {
                    "type": "integer",
                    "example": 20
                },
                "user_id": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        },
        "model.Report": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "EM-test",
	Description:      "REST API для управления подписками",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
